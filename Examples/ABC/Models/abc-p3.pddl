(define (problem abc1)
    (:domain abc)
  (:objects a b c - job
	    alice bob charlie - agent) 
  (:init (= (locId door) 0)
	 (= (locId printer) 1)
	 (= (locId coffee-machine) 2)
	 (= (locId paper-stack) 3)
	 (= (locId water-tap) 4)
	 (= (locId coffee-jar) 5)
	 (= (locId outside) 6)
	 (= (agId alice) 0)
	 (= (agId bob) 1)
         (= (agId charlie) 2)
         (at outside alice)
	 (at outside bob)
         (at outside charlie)
	 (provides water water-tap)
	 (provides paper paper-stack)
	 (provides ground-coffee coffee-jar)
	 (resource-of paper printer)
	 (resource-of water coffee-machine)
	 (resource-of ground-coffee coffee-machine)
	 (hands-free alice)
	 (hands-free bob)
         (hands-free charlie)
	 printer-jammed)
  (:goal (and (forall (?j - job) (printed ?j))
	      (holds coffee alice)
	      (holds coffee bob)
              (holds coffee charlie)
	      (forall (?a - agent) (at outside ?a)))))

